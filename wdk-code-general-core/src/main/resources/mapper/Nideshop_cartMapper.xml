<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wdk.general.core.storage.dao.Nideshop_cartMapper">
  <resultMap id="BaseResultMap" type="com.wdk.general.core.storage.entity.Nideshop_cart">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="session_id" jdbcType="CHAR" property="sessionId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_sn" jdbcType="VARCHAR" property="goodsSn" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="retail_price" jdbcType="DECIMAL" property="retailPrice" />
    <result column="number" jdbcType="SMALLINT" property="number" />
    <result column="goods_specifition_ids" jdbcType="VARCHAR" property="goodsSpecifitionIds" />
    <result column="checked" jdbcType="BIT" property="checked" />
    <result column="list_pic_url" jdbcType="VARCHAR" property="listPicUrl" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.wdk.general.core.storage.entity.Nideshop_cart">
    <result column="goods_specifition_name_value" jdbcType="LONGVARCHAR" property="goodsSpecifitionNameValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, session_id, goods_id, goods_sn, product_id, goods_name, market_price, 
    retail_price, number, goods_specifition_ids, checked, list_pic_url
  </sql>
  <sql id="Blob_Column_List">
    goods_specifition_name_value
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.wdk.general.core.storage.entity.Nideshop_cartExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nideshop_cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.wdk.general.core.storage.entity.Nideshop_cartExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from nideshop_cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nideshop_cart
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from nideshop_cart
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wdk.general.core.storage.entity.Nideshop_cartExample">
    delete from nideshop_cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wdk.general.core.storage.entity.Nideshop_cart">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nideshop_cart (user_id, session_id, goods_id, 
      goods_sn, product_id, goods_name, 
      market_price, retail_price, number, 
      goods_specifition_ids, checked, list_pic_url, 
      goods_specifition_name_value)
    values (#{userId,jdbcType=INTEGER}, #{sessionId,jdbcType=CHAR}, #{goodsId,jdbcType=INTEGER}, 
      #{goodsSn,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, 
      #{marketPrice,jdbcType=DECIMAL}, #{retailPrice,jdbcType=DECIMAL}, #{number,jdbcType=SMALLINT}, 
      #{goodsSpecifitionIds,jdbcType=VARCHAR}, #{checked,jdbcType=BIT}, #{listPicUrl,jdbcType=VARCHAR}, 
      #{goodsSpecifitionNameValue,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wdk.general.core.storage.entity.Nideshop_cart">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nideshop_cart
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="sessionId != null">
        session_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsSn != null">
        goods_sn,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="retailPrice != null">
        retail_price,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="goodsSpecifitionIds != null">
        goods_specifition_ids,
      </if>
      <if test="checked != null">
        checked,
      </if>
      <if test="listPicUrl != null">
        list_pic_url,
      </if>
      <if test="goodsSpecifitionNameValue != null">
        goods_specifition_name_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="sessionId != null">
        #{sessionId,jdbcType=CHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsSn != null">
        #{goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="retailPrice != null">
        #{retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        #{number,jdbcType=SMALLINT},
      </if>
      <if test="goodsSpecifitionIds != null">
        #{goodsSpecifitionIds,jdbcType=VARCHAR},
      </if>
      <if test="checked != null">
        #{checked,jdbcType=BIT},
      </if>
      <if test="listPicUrl != null">
        #{listPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecifitionNameValue != null">
        #{goodsSpecifitionNameValue,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wdk.general.core.storage.entity.Nideshop_cartExample" resultType="java.lang.Long">
    select count(*) from nideshop_cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nideshop_cart
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.sessionId != null">
        session_id = #{record.sessionId,jdbcType=CHAR},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsSn != null">
        goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.retailPrice != null">
        retail_price = #{record.retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=SMALLINT},
      </if>
      <if test="record.goodsSpecifitionIds != null">
        goods_specifition_ids = #{record.goodsSpecifitionIds,jdbcType=VARCHAR},
      </if>
      <if test="record.checked != null">
        checked = #{record.checked,jdbcType=BIT},
      </if>
      <if test="record.listPicUrl != null">
        list_pic_url = #{record.listPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsSpecifitionNameValue != null">
        goods_specifition_name_value = #{record.goodsSpecifitionNameValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.updateSql != null" >
        ${record.updateSql},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update nideshop_cart
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      session_id = #{record.sessionId,jdbcType=CHAR},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      retail_price = #{record.retailPrice,jdbcType=DECIMAL},
      number = #{record.number,jdbcType=SMALLINT},
      goods_specifition_ids = #{record.goodsSpecifitionIds,jdbcType=VARCHAR},
      checked = #{record.checked,jdbcType=BIT},
      list_pic_url = #{record.listPicUrl,jdbcType=VARCHAR},
      goods_specifition_name_value = #{record.goodsSpecifitionNameValue,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nideshop_cart
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      session_id = #{record.sessionId,jdbcType=CHAR},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      retail_price = #{record.retailPrice,jdbcType=DECIMAL},
      number = #{record.number,jdbcType=SMALLINT},
      goods_specifition_ids = #{record.goodsSpecifitionIds,jdbcType=VARCHAR},
      checked = #{record.checked,jdbcType=BIT},
      list_pic_url = #{record.listPicUrl,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wdk.general.core.storage.entity.Nideshop_cart">
    update nideshop_cart
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="sessionId != null">
        session_id = #{sessionId,jdbcType=CHAR},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsSn != null">
        goods_sn = #{goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="retailPrice != null">
        retail_price = #{retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=SMALLINT},
      </if>
      <if test="goodsSpecifitionIds != null">
        goods_specifition_ids = #{goodsSpecifitionIds,jdbcType=VARCHAR},
      </if>
      <if test="checked != null">
        checked = #{checked,jdbcType=BIT},
      </if>
      <if test="listPicUrl != null">
        list_pic_url = #{listPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="goodsSpecifitionNameValue != null">
        goods_specifition_name_value = #{goodsSpecifitionNameValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wdk.general.core.storage.entity.Nideshop_cart">
    update nideshop_cart
    set user_id = #{userId,jdbcType=INTEGER},
      session_id = #{sessionId,jdbcType=CHAR},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_sn = #{goodsSn,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      retail_price = #{retailPrice,jdbcType=DECIMAL},
      number = #{number,jdbcType=SMALLINT},
      goods_specifition_ids = #{goodsSpecifitionIds,jdbcType=VARCHAR},
      checked = #{checked,jdbcType=BIT},
      list_pic_url = #{listPicUrl,jdbcType=VARCHAR},
      goods_specifition_name_value = #{goodsSpecifitionNameValue,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wdk.general.core.storage.entity.Nideshop_cart">
    update nideshop_cart
    set user_id = #{userId,jdbcType=INTEGER},
      session_id = #{sessionId,jdbcType=CHAR},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_sn = #{goodsSn,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      retail_price = #{retailPrice,jdbcType=DECIMAL},
      number = #{number,jdbcType=SMALLINT},
      goods_specifition_ids = #{goodsSpecifitionIds,jdbcType=VARCHAR},
      checked = #{checked,jdbcType=BIT},
      list_pic_url = #{listPicUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.wdk.general.core.storage.entity.Nideshop_cartExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nideshop_cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.wdk.general.core.storage.entity.Nideshop_cartExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from nideshop_cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="sumByExample" parameterType="com.wdk.general.core.storage.entity.Nideshop_cartExample" resultType="long" >
    select sum(${sumCol}) from nideshop_cart
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into nideshop_cart  (user_id, session_id, goods_id, 
        goods_sn, product_id, goods_name, 
        market_price, retail_price, number, 
        goods_specifition_ids, checked, list_pic_url, 
        goods_specifition_name_value)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.userId,jdbcType=INTEGER}, #{item.sessionId,jdbcType=CHAR}, #{item.goodsId,jdbcType=INTEGER}, 
        #{item.goodsSn,jdbcType=VARCHAR}, #{item.productId,jdbcType=INTEGER}, #{item.goodsName,jdbcType=VARCHAR}, 
        #{item.marketPrice,jdbcType=DECIMAL}, #{item.retailPrice,jdbcType=DECIMAL}, #{item.number,jdbcType=SMALLINT}, 
        #{item.goodsSpecifitionIds,jdbcType=VARCHAR}, #{item.checked,jdbcType=BIT}, #{item.listPicUrl,jdbcType=VARCHAR}, 
        #{item.goodsSpecifitionNameValue,jdbcType=LONGVARCHAR})
      </foreach>
    </if>
  </insert>
</mapper>